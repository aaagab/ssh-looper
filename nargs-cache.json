{"auto_alias_prefix":"--","auto_alias_style":"lowercase-hyphen","builtins":{"help":null,"path_etc":null,"query":null,"usage":null,"version":null},"cache":true,"cache_file":"nargs-cache.json","dump":{"args":{"a":["--args"],"ai":{"--args":{"is_flag":false,"prefix":"--","text":"args"}},"ar":{"_help_":{"a":["--help","-h"],"ai":{"--help":{"is_flag":false,"prefix":"--","text":"help"},"-h":{"is_flag":true,"prefix":"-","text":"h"}},"ap":false,"ar":{"examples":{"a":["--examples","-e"],"ai":{"--examples":{"is_flag":false,"prefix":"--","text":"examples"},"-e":{"is_flag":true,"prefix":"-","text":"e"}},"ar":{},"as":false,"da":"--examples","h":"Print program examples and exit.","ib":true,"is":false},"export":{"a":["--export"],"ai":{"--export":{"is_flag":false,"prefix":"--","text":"export"}},"ar":{"overwrite":{"a":["--overwrite"],"ai":{"--overwrite":{"is_flag":false,"prefix":"--","text":"overwrite"}},"ar":{},"da":"--overwrite","h":"Implicitly overwrites exported documentation file if it exists already.","ib":true},"to":{"a":["--to"],"ai":{"--to":{"is_flag":false,"prefix":"--","text":"to"}},"ar":{},"da":"--to","h":"Export help to selected path.","ib":true,"t":"vpath","v":true,"vi":1,"vm":1,"vr":true}},"da":"--export","h":"Export help to selected format.","i":["asciidoc","html","markdown","text"],"ib":true,"t":"str","v":true,"vi":1,"vm":1,"vr":true},"metadata":{"a":["--metadata","-m"],"ai":{"--metadata":{"is_flag":false,"prefix":"--","text":"metadata"},"-m":{"is_flag":true,"prefix":"-","text":"m"}},"ar":{"json":{"a":["--json","-j"],"ai":{"--json":{"is_flag":false,"prefix":"--","text":"json"},"-j":{"is_flag":true,"prefix":"-","text":"j"}},"ar":{},"da":"--json","h":"Selected metadata is returned as json dictionary","ib":true,"is":false},"keys":{"a":["--keys","-k"],"ai":{"--keys":{"is_flag":false,"prefix":"--","text":"keys"},"-k":{"is_flag":true,"prefix":"-","text":"k"}},"ar":{},"da":"--keys","h":"Return only keys from metadata dictionary","ib":true,"is":false,"xg":[1]},"values":{"a":["--values","-v"],"ai":{"--values":{"is_flag":false,"prefix":"--","text":"values"},"-v":{"is_flag":true,"prefix":"-","text":"v"}},"ar":{},"da":"--values","h":"Return only values from metadata dictionary","ib":true,"is":false,"xg":[1]}},"as":false,"da":"--metadata","h":"Print program metadata and exit.","ib":true,"in":"KEY can be provided to get only selected key(s) from metadata dictionary. If KEY is not provided then all keys from metadata dictionary are selected.","is":false,"l":"KEY","t":"str","v":true,"vi":1,"x":{"keys":{"1":["values"]},"values":{"1":["keys"]}}},"syntax":{"a":["--syntax"],"ai":{"--syntax":{"is_flag":false,"prefix":"--","text":"syntax"}},"ar":{"only":{"a":["--only"],"ai":{"--only":{"is_flag":false,"prefix":"--","text":"only"}},"ar":{},"da":"--only","h":"Print only arguments Cheat Sheet syntax and exit.","ib":true,"is":false}},"da":"--syntax","h":"Print arguments Cheat Sheet syntax and exit.","ib":true,"is":false}},"as":false,"da":"--help","h":"Print program help and exit.","ib":true,"is":false},"_path_etc_":{"a":["--path-etc"],"ai":{"--path-etc":{"is_flag":false,"prefix":"--","text":"path-etc"}},"ap":false,"ar":{},"as":false,"da":"--path-etc","h":"Print program configuration path and exit.","ib":true,"is":false},"_query_":{"a":["--query"],"ai":{"--query":{"is_flag":false,"prefix":"--","text":"query"}},"ap":false,"ar":{},"as":false,"da":"--query","h":"Load program's arguments from a json file with optional parameterized values.","ib":true,"in":"query argument allows to execute safe command-line arguments query on the program. Command-line arguments are collected through a JSON file. The JSON file has two attributes 'command' and 'params'. 'command' accepts a list of command-line arguments with values where each value may be replaced with a question mark. 'params' accepts a list of values. The number of values in 'params' must match the number of question marks in 'command'. 'command' arguments are only parsed as arguments and 'params' are only parsed as argument values. It allows a safe way to pass values collected from a third party program like a web application to the command-line program. All errors are returned as a json dump for better communication with third party program.(see Nargs developer documentation)","is":false,"t":"file","v":true,"vi":1,"vm":1,"vr":true},"_usage_":{"a":["--usage","-u","?"],"ai":{"--usage":{"is_flag":false,"prefix":"--","text":"usage"},"-u":{"is_flag":true,"prefix":"-","text":"u"},"?":{"is_flag":true,"prefix":"","text":"?"}},"ar":{"builtins":{"a":["--builtins","-b"],"ai":{"--builtins":{"is_flag":false,"prefix":"--","text":"builtins"},"-b":{"is_flag":true,"prefix":"-","text":"b"}},"ar":{},"da":"--builtins","h":"Print built-ins arguments.","ib":true,"is":false},"depth":{"a":["--depth","-d"],"ai":{"--depth":{"is_flag":false,"prefix":"--","text":"depth"},"-d":{"is_flag":true,"prefix":"-","text":"d"}},"ar":{},"d":[1],"da":"--depth","h":"Provide the printing depth of nested arguments.","ib":true,"in":"If LEVEL == -1 then all nested arguments are printed. If LEVEL == 0 then only selected argument is printed. If LEVEL > 0 then the bigger the LEVEL number is, the bigger the children nesting level is if any children are available.","is":false,"l":"LEVEL","re":true,"t":"int","v":true,"vi":1,"vm":1,"vr":true},"examples":{"a":["--examples","-e"],"ai":{"--examples":{"is_flag":false,"prefix":"--","text":"examples"},"-e":{"is_flag":true,"prefix":"-","text":"e"}},"ar":{},"da":"--examples","h":"Print argument(s) examples if any.","ib":true,"is":false},"flags":{"a":["--flags","-F"],"ai":{"--flags":{"is_flag":false,"prefix":"--","text":"flags"},"-F":{"is_flag":true,"prefix":"-","text":"F"}},"ar":{},"da":"--flags","h":"Print flag set if any for all arguments available on the terminal.","ib":true,"is":false},"from":{"a":["--from","-f"],"ai":{"--from":{"is_flag":false,"prefix":"--","text":"from"},"-f":{"is_flag":true,"prefix":"-","text":"f"}},"ar":{},"d":[0],"da":"--from","h":"This option allows to start printing usage from a parent.","ib":true,"in":"If LEVEL == -1 then selected argument is the root argument. If LEVEL == 0 then selected argument is the current argument. If LEVEL > 0 then one argument parent is selected and the bigger the LEVEL number is, the older the selected parent is unless parent's limit is reached. Argument's parent's limit is the oldest parent also called the root argument.","is":false,"l":"LEVEL","re":true,"t":"int","v":true,"vi":1,"vm":1,"vr":true},"hint":{"a":["--hint","-h"],"ai":{"--hint":{"is_flag":false,"prefix":"--","text":"hint"},"-h":{"is_flag":true,"prefix":"-","text":"h"}},"ar":{},"da":"--hint","h":"Print argument(s) hint if any.","ib":true,"is":false},"info":{"a":["--info","-i"],"ai":{"--info":{"is_flag":false,"prefix":"--","text":"info"},"-i":{"is_flag":true,"prefix":"-","text":"i"}},"ar":{},"da":"--info","h":"Print argument(s) info if any.","ib":true,"is":false},"path":{"a":["--path","-p"],"ai":{"--path":{"is_flag":false,"prefix":"--","text":"path"},"-p":{"is_flag":true,"prefix":"-","text":"p"}},"ar":{},"da":"--path","h":"Print argument(s) path with values.","ib":true,"is":false},"properties":{"a":["--properties","-r"],"ai":{"--properties":{"is_flag":false,"prefix":"--","text":"properties"},"-r":{"is_flag":true,"prefix":"-","text":"r"}},"ar":{},"da":"--properties","h":"Print argument(s) properties.","i":["allow_parent_fork","allow_siblings","need_child","preset","repeat","required","xor_groups"],"ib":true,"is":false,"t":"str","v":true,"vi":1,"vm":7}},"da":"--usage","h":"Print program usage and exit.","ib":true,"in":"LEVEL is an integer >= 0. LEVEL number describes the number of nested node levels to print. LEVEL number is relative to current argument node level. If LEVEL == 0 then all nested node levels are printed. If LEVEL == 1 then only current argument is printed. If LEVEL > 1 current argument's node levels are printed and LEVEL sets the depth of node levels nesting.","is":false,"iu":true,"rc":["depth","from"]},"_version_":{"a":["--version","-v"],"ai":{"--version":{"is_flag":false,"prefix":"--","text":"version"},"-v":{"is_flag":true,"prefix":"-","text":"v"}},"ap":false,"ar":{},"as":false,"da":"--version","h":"Print program version and exit.","ib":true,"is":false},"clear":{"a":["--clear"],"ai":{"--clear":{"is_flag":false,"prefix":"--","text":"clear"}},"ar":{},"da":"--clear","in":"Clear previous ssh-looper connections"},"cmd":{"a":["--cmd"],"ai":{"--cmd":{"is_flag":false,"prefix":"--","text":"cmd"}},"ar":{"resolve":{"a":["--resolve"],"ai":{"--resolve":{"is_flag":false,"prefix":"--","text":"resolve"}},"ar":{},"da":"--resolve","in":"Resolve the network if dns ip is provided","l":"DNS_IP","t":"str","v":true,"vi":1,"vm":1,"vr":true},"unknown":{"a":["--unknown"],"ai":{"--unknown":{"is_flag":false,"prefix":"--","text":"unknown"}},"ar":{},"da":"--unknown","in":"Unknown host When selected following options are added -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"}},"da":"--cmd","l":"SSH_CMD","t":"str","v":true,"vi":1,"vm":1,"vr":true},"list":{"a":["--list"],"ai":{"--list":{"is_flag":false,"prefix":"--","text":"list"}},"ar":{},"da":"--list","in":"list all active ssh loop commands"}},"da":"--args","ex":["# supported commands are:\nssh -N -L 2222:localhost:2222 user@domain.com\nssh -N -L 2222:localhost:2222 user@domain.com --resolve 123.123.123.123\nssh user@192.168.56.1 -N -R 2222:localhost:22"],"n":true,"re":true}},"map":{"arg_defaults":{"ap":true,"ar":{},"as":true,"d":null,"e":true,"ex":null,"h":null,"i":null,"ib":false,"ic":false,"il":[],"in":null,"is":true,"iu":false,"l":null,"n":false,"p":false,"pc":[],"r":"replace","rc":[],"re":false,"s":true,"t":null,"v":false,"vi":null,"vm":null,"vr":false,"x":{},"xg":null},"arg_props":{"a":"aliases","ai":"aliases_info","ap":"allow_parent_fork","ar":"args","as":"allow_siblings","d":"default","da":"default_alias","e":"enabled","ex":"examples","h":"hint","i":"in","ib":"is_builtin","ic":"is_custom_builtin","il":"in_labels","in":"info","is":"is_auto_alias","iu":"is_usage","l":"label","n":"need_child","p":"preset","pc":"preset_children","r":"repeat","rc":"required_children","re":"required","s":"show","t":"type","v":"values_authorized","vi":"values_min","vm":"values_max","vr":"values_required","x":"xor","xg":"xor_groups"},"theme_defaults":{"b":null,"f":null,"i":false,"o":false,"u":false},"theme_props":{"b":"background","f":"foreground","i":"italic","o":"bold","u":"underline"}},"md5_files":{"filenpa_metadata":{"filenpa":"/home/gabaaa/fty/wrk/s/ssh-looper/1/src/gpm.json","md5":"9c874c3d4de7d5005f04daff28e4793a"},"nargs":{"filenpa":"/home/gabaaa/fty/wrk/s/ssh-looper/1/src/gpkgs/nargs/gpm.json","md5":"d9c6ad063d4c37dfd6e79383c49abe0f"},"options_file":{"filenpa":"/home/gabaaa/fty/wrk/s/ssh-looper/1/src/config/options.yaml","md5":"13b275514eea4d16ea5341d70b6c7047"}},"md5_options":"98b853c916a6046a28760ab67007a34b","metadata":{"authors":["Gabriel Auger"],"deps":["fe9fbe81-806f-4e85-8042-aaa33ce02d6a|etconf|3.1.0|gpm","cf09346e-b436-4259-b6dd-e56516b508a5|message|7.1.1|gpm","89d8676a-6b02-43fa-8694-e97de5680cd0|nargs|5.1.1|gpm","df328dbe-54ab-4a6d-b7a2-932b0eaee30a|shell_helpers|5.4.0|gpm"],"description":"reconnect ssh indefinitely","executable":"scriptjob","filen_main":"main.py","installer":"gpm","licenses":["MIT"],"name":"ssh-looper","timestamp":1718039001.4542177,"uuid4":"845c830a-4c33-4373-b729-95346f706e44","version":"1.4.0"},"nargs_version":"5.1.1","only_cache":false,"options_file":"config/options.yaml","path_etc":"/home/gabaaa/fty/etc/s/ssh-looper/845c830a4c334373b72995346f706e44/1","pretty_help":true,"pretty_msg":true,"raise_exc":true,"substitute":false,"theme":{"about_fields":{"f":"202;233;130"},"aliases":{"f":"136;184;246"},"arg_index":{"o":true},"arg_path":{"f":"202;233;130"},"brackets":{"f":"202;233;130","o":true},"bullets":{"f":"156;153;142"},"emphasize":{"f":"229;120;109"},"examples":{},"flags":{"f":"149;228;84","i":true},"headers":{"f":"234;231;136","o":true},"hint":{"i":true},"info":{},"properties":{},"syntax_headers":{"f":"202;233;130"},"values":{"f":"215;135;255","i":true}}}